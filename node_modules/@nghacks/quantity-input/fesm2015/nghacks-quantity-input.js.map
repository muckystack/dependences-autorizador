{"version":3,"file":"nghacks-quantity-input.js","sources":["../../../projects/quantity-input/src/lib/quantity-input.component.ts","../../../projects/quantity-input/src/lib/quantity-input.module.ts","../../../projects/quantity-input/src/public-api.ts","../../../projects/quantity-input/src/nghacks-quantity-input.ts"],"sourcesContent":["import { Component, EventEmitter, forwardRef, Input, OnDestroy, Output } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'quantity-input',\n  templateUrl: './quantity-input.component.html',\n  styleUrls: ['./quantity-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => QuantityInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class QuantityInputComponent implements ControlValueAccessor, OnDestroy {\n\n  quantityCtrl = new FormControl(1);\n\n  @Input() color: string;\n\n  limit = 10000000;\n  @Input('limit')\n  private set limitValue(v: string) {\n    if (!v) { return; }\n    this.limit = parseInt(v);\n  }\n\n  // Allow the input to be disabled, and when it is make it somewhat transparent.\n  disabled = false;\n  @Input('disabled')\n  private set disabledValue(v: boolean) {\n    if (!v) { return; }\n    this.quantityCtrl.disable();\n    this.disabled = v;\n  }\n\n  private _unsubscribeAll: Subject<any> = new Subject();\n\n  @Output() quantityChange = new EventEmitter<number>();\n\n  // Function to call when the quantity changes.\n  onChange = (quantity: number) => {\n    this.quantityChange.emit(quantity);\n  }\n\n  // Function to call when the input is touched (when a star is clicked).\n  onTouched = () => { };\n  get value(): number {\n    return this.quantityCtrl.value;\n  }\n\n  constructor() {\n    this.quantityCtrl.valueChanges\n      .pipe(\n        takeUntil(this._unsubscribeAll)\n      )\n      .subscribe((val) => {\n        if (this.quantityCtrl.value < 1) {\n          this.writeValue(1);\n        }\n        else if (this.quantityCtrl.value > this.limit) {\n          this.writeValue(this.limit);\n        }\n        else {\n          this.writeValue(this.quantityCtrl.value);\n        }\n      });\n  }\n\n  increase(): void {\n    if (!this.disabled) {\n      this.quantityCtrl.setValue((this.quantityCtrl.value + 1));\n    }\n  }\n\n  decrease(): void {\n    if (!this.disabled) {\n      this.quantityCtrl.setValue((this.quantityCtrl.value - 1));\n    }\n  }\n\n  // Allows Angular to update the model (quantity).\n  // Update the model and changes needed for the view here.\n  writeValue(quantity: number): void {\n    this.quantityCtrl.setValue(quantity, { emitEvent: false });\n    this.onChange(this.value);\n  }\n\n  // Allows Angular to register a function to call when the model (quantity) changes.\n  // Save the function as a property to call later here.\n  registerOnChange(fn: (quantity: number) => void): void {\n    this.onChange = fn;\n  }\n\n  // Allows Angular to register a function to call when the input has been touched.\n  // Save the function as a property to call later here.\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  // Allows Angular to disable the input.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    if (isDisabled) {\n      this.quantityCtrl.disable();\n    }\n    else {\n      this.quantityCtrl.enable();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuantityInputComponent } from './quantity-input.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [QuantityInputComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    ReactiveFormsModule\n  ],\n  exports: [QuantityInputComponent]\n})\nexport class QuantityInputModule { }\n","/*\n * Public API Surface of quantity-input\n */\n\nexport * from './lib/quantity-input.component';\nexport * from './lib/quantity-input.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}